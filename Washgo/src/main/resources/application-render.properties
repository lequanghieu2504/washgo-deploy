# Render Production Configuration
# =======================
# = Server Configuration =
# =======================

# Port will be set via JVM argument in Dockerfile
server.address=0.0.0.0

# ====================
# = Database Config   =
# ====================

# Option 1: Use full DATABASE_URL (preferred)
spring.datasource.url=${DATABASE_URL:postgresql://washgo:pIOwDU82zgr352i2UahZIXnlBx3cTWN3@dpg-d37e4l8gjchc73c7984g-a.singapore-postgres.render.com:5432/washgo_kkrs}

# Option 2: Alternative using separate components (fallback)
# spring.datasource.url=jdbc:postgresql://${DB_HOST:dpg-d37e4l8gjchc73c7984g-a.singapore-postgres.render.com}:${DB_PORT:5432}/${DB_NAME:washgo_kkrs}
# spring.datasource.username=${DB_USER:washgo}
# spring.datasource.password=${DB_PASSWORD:pIOwDU82zgr352i2UahZIXnlBx3cTWN3}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Database connection pool settings
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.leak-detection-threshold=60000

# Handle database initialization failures gracefully
spring.sql.init.continue-on-error=true
spring.jpa.defer-datasource-initialization=true

# Debug logging for database connection
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG

# Jackson Serialization Configuration
spring.jackson.serialization.fail-on-empty-beans=false

# ==========================
# = JWT Configuration      =
# ==========================

jwt.current-secret=${JWT_SECRET:G3BRkHrdRXmhc4CY++yAdBe77o9F9whOX+gYMe8SYrU=}
jwt.previous-secrets=${JWT_PREVIOUS_SECRETS:}
# 1 hour
jwt.access.expiration=${JWT_ACCESS_EXPIRATION:3600000}
# 7 days
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# ==========================
# = Spring Security         =
# ==========================

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_SET_URI:https://your-backend-url.onrender.com/.well-known/jwks.json}

# Google OAuth Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:https://your-backend-url.onrender.com/login/oauth2/code/google}
spring.security.oauth2.client.registration.google.scope=profile,email

# ====================
# = JPA Configuration =
# ====================

spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.open-in-view=false

# ====================
# = File Upload       =
# ====================

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.storage.root=${FILE_STORAGE_ROOT:/tmp/uploads}

# ====================
# = Email Configuration =
# ====================

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ====================
# = Stripe Configuration =
# ====================

stripe.api.key=${STRIPE_SECRET_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

# ====================
# = CORS Configuration =
# ====================

cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# ====================
# = Logging           =
# ====================

logging.level.org.springframework=${LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${HIBERNATE_LOG_LEVEL:WARN}
logging.level.com.example.washgo=INFO
logging.level.org.springframework.boot.web.embedded.tomcat=INFO
logging.level.org.apache.catalina=INFO

# ====================
# = Actuator          =
# ====================

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.db.enabled=true